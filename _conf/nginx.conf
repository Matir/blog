server {
  listen                    [::]:80 default ipv6only=off;
  server_name               systemoverlord.com;

  # Various security-oriented headers
  add_header X-XSS-Protection         "1; mode=block";
  add_header X-Content-Type-Options   nosniff;
  add_header X-Frame-Options          "SAMEORIGIN";
  add_header Content-Security-Policy  "default-src: 'self'";

  return                    301 https://$host$request_uri;
}

server {
  listen                    [::]:443 ssl default ipv6only=off;
  server_name               systemoverlord.com;
  root                      /srv/blog/current;

  ssl_certificate           /etc/ssl/certs/systemoverlord.com.crt;
  ssl_certificate_key       /etc/ssl/private/systemoverlord.com.key;
  ssl_dhparam               /etc/ssl/private/dhparams.pem;
  ssl_prefer_server_ciphers on;
  ssl_session_cache         shared:SSL:10m;
  ssl_session_timeout       10m;
  ssl_ciphers               "kDHE:kDHr:AESGCM:AES256:AES128:TLSv1.2:HIGH:!aNULL:!eNULL:!LOW:!MD5:!RC4:!DES:!SRP:!EXP:!PSK:!DSS";
  ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;

  error_page                404 /404.html;
  error_page                403 /403.html;

  gzip_static               on;

  # Various security-oriented headers
  add_header Strict-Transport-Security  "max-age=31536000";
  add_header X-XSS-Protection           "1; mode=block";
  add_header X-Content-Type-Options     nosniff;
  add_header X-Frame-Options            "SAMEORIGIN";
  add_header Content-Security-Policy
    "default-src 'none'; script-src 'self' https://www.google-analytics.com; object-src 'none'; style-src 'self' fonts.googleapis.com; img-src *; media-src 'none'; frame-src 'none'; font-src 'self' fonts.gstatic.com; connect-src 'none'";

  location ~ /blog/(feed|rss|feeds/rss) {
    return    301 https://$host/atom.xml;
  }

  # Infrequently updated static files
  location ~ \.(css|js|woff)$ {
    expires 12h;
  }

  # Fix for broken permalinks
  location ~ "^/blog/(\d+/\d+/\d+)/([A-Za-z0-9_-]+)" {
    try_files $uri /$1/$2/ /blog/$2/ =404;
  }

  location ~ "^/blog/category/(.*)" {
    return 301 https://$host/category/$1/;
  }

  location ~ "^/blog/tag/" {
    return 301 https://$host/tags/;
  }

  location ~ "^/blog/([A-Za-z0-9_-]+)" {
    return 301 https://$host$dest;
  }

  location = /robots.txt {
    access_log off;
    error_log off;
  }

  location = /favicon.ico {
    access_log off;
    error_log off;
  }

  location = /blog/ {
    return 301 https://$host/;
  }

  location / {
    try_files $uri $uri.html $uri/ =404;
  }
}


# Rewrite map
map_hash_bucket_size 128;
map $uri $dest {
  include rewrite.map;
}
